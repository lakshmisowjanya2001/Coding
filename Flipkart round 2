*PROBLEUM 1 : WAVE ARRAY *

class Solution:
    def convertToWave(self, arr, N):
        arr.sort() 
        for i in range(0,N-1,2):
            arr[i], arr[i+1] = arr[i+1], arr[i]
        return arr
 if __name__=='__main__':
    t=int(input())
    for _ in range(t):
        N=int(input())
        arr=[int (x) for x in input().split()]
        ob=Solution()
        ob.convertToWave(arr, N)
        for i in arr:
            print(i,end=" ")
        print()
        
*PROBLEUM 2 : STRANDE MATRIX *

// {Driver Code Starts 
//Initial Template for java 
import java.io.*;
import java.util.*;
class A{
    private int R,C;
    private int[] B;
    public void init(int _R,int _C,int[] _B){
        R=_R;
        B=_B.clone();
        C=_C;
    }
    public int get(int i,int j){
        assert(0<=i&&i<R&&0<=j&&j<C);
        if(B[i]>=j+1)
        return 0;
        return 1;
    }
}
//User function Template for Java

class Solution{
    private A a;
    Solution(A a){
        this.a=a;
    }
    // do not edit this function
    // use it to get the value of A[i][j]
    int get(int i,int j){
      return a.get(i,j); 
    }
    public int solve(int R,int C){
        
        
    }
};
class GFG{
    public static void main(String args[]) throws IOException{
        A a=new A()
        Scanner sc=new Scanner(System.in);
        int t=sc.nextInt();
        while(t-->0){
            int R=sc.nextInt();
            int C=sc.nextInt();
            int[] B=new int[R];
            for(int i=0;i<R;i++)
                B[i]=sc.nextInt();
            a.init(R,C,B);
            Solution obj=new Solution(a);
            int answer=obj.solve(R,C);
            System.out.println(answer);
        }
    }
} 
